---
openapi: 3.0.1
info:
  title: Genesis Cloud API
  description: |
    This is the public API for the Genesis Cloud Compute service.
    Manage your compute resources including images, instances, security groups, 
    snapshots, and volumes.
  version: 1.0.0
servers:
  - url: https://api.genesiscloud.com

tags:
  - name: Images
    description: |
      A Genesis Cloud Image can be used to create an Instance.
  - name: Instances
    description: |
      An instance is a Genesis Cloud virtual machine.
  - name: Security Groups
    description: |
      A security group is a set of firewall rules on a set of instances.
  - name: Snapshots
    description: |
      Take snapshots of your instances to save and reuse your setup.
  - name: Volumes
    description: |
      Attach storage volumes to store large datasets.
  - name: Availability
    description: |
      Check the cluster availability of the Genesis Cloud Compute service.
  - name: SSH Keys
    description: |
      Manage your SSH keys to securely access your instances.

paths:
  /compute/v1/images:
    get:
      tags:
        - Images
      operationId: ListImages
      summary: List images
      parameters:
        - $ref: "#/components/parameters/PageQueryParameter"
        - $ref: "#/components/parameters/PerPageQueryParameter"
        - in: query
          name: type
          schema:
            $ref: "#/components/schemas/compute.v1.Image.Type"
      responses:
        "200":
          description: "success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/compute.v1.ListImagesResponse"
        default:
          $ref: "#/components/responses/Error"
      security:
        - genesiscloud: []

  /compute/v1/snapshots:
    get:
      tags:
        - Snapshots
      operationId: ListSnapshots
      summary: List Snapshots
      parameters:
        - $ref: "#/components/parameters/PageQueryParameter"
        - $ref: "#/components/parameters/PerPageQueryParameter"
      responses:
        "200":
          description: "success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/compute.v1.ListSnapshotsResponse"
        default:
          $ref: "#/components/responses/Error"
      security:
        - genesiscloud: []

  /compute/v1/snapshots/{snapshot_id}:
    parameters:
      - in: path
        name: snapshot_id
        required: true
        schema:
          type: string
          description: Snapshot id
    get:
      tags:
        - Snapshots
      operationId: GetSnapshot
      summary: Get snapshot
      description: Get details of a snapshot with the given ID
      responses:
        "200":
          description: "success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/compute.v1.GetSnapshotResponse"
        default:
          $ref: "#/components/responses/Error"
      security:
        - genesiscloud: []
    patch:
      tags:
        - Snapshots
      operationId: UpdateSnapshot
      summary: Update snapshot
      description: Update the details of a snapshot with the given ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: |
                    The new human-readable name for your snapshot.
              required:
                - name
      responses:
        "200":
          description: "success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/compute.v1.UpdateSnapshotResponse"
        default:
          $ref: "#/components/responses/Error"
      security:
        - genesiscloud: []
    delete:
      tags:
        - Snapshots
      operationId: DeleteSnapshot
      summary: Delete snapshot
      description: Delete a snapshot with the given ID
      responses:
        "204":
          description: "success"
        default:
          $ref: "#/components/responses/Error"
      security:
        - genesiscloud: []

  /compute/v1/volumes:
    post:
      tags:
        - Volumes
      operationId: CreateVolume
      summary: Create volume
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: |
                    The human-readable name set for the volume.
                description:
                  type: string
                  description: |
                    The human-readable description set for the volume.
                size:
                  type: integer
                  description: |
                    The storage size of this volume given in GiB (Min: 1GiB).
                region:
                  $ref: "#/components/schemas/compute.v1.Region"
              required:
                - name
                - description
                - size
      responses:
        "201":
          description: "success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/compute.v1.GetVolumeResponse"
        default:
          $ref: "#/components/responses/Error"
    get:
      tags:
        - Volumes
      operationId: ListVolumes
      summary: List volumes
      parameters:
        - $ref: "#/components/parameters/PageQueryParameter"
        - $ref: "#/components/parameters/PerPageQueryParameter"
      responses:
        "200":
          description: "success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/compute.v1.ListVolumesResponse"
        default:
          $ref: "#/components/responses/Error"
      security:
        - genesiscloud: []

  /compute/v1/volumes/{volume_id}:
    parameters:
      - in: path
        name: volume_id
        required: true
        schema:
          type: string
          description: Volume id
    get:
      tags:
        - Volumes
      operationId: GetVolume
      summary: Get volume
      description: Get details of a volume with the given ID
      responses:
        "200":
          description: "success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/compute.v1.GetVolumeResponse"
        default:
          $ref: "#/components/responses/Error"
      security:
        - genesiscloud: []
    put:
      tags:
        - Volumes
      operationId: UpdateVolume
      summary: Update volume
      description: Update the details of a volume with the given ID
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The human-readable name set for the volume.
                description:
                  type: string
                  description: The human-readable description set for the volume.
              required:
                - name
                - description
      responses:
        "200":
          description: "success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/compute.v1.UpdateVolumeResponse"
        default:
          $ref: "#/components/responses/Error"
      security:
        - genesiscloud: []
    delete:
      tags:
        - Volumes
      operationId: DeleteVolume
      summary: Delete volume
      description: Delete a volume with the given ID
      responses:
        "204":
          description: "success"
        default:
          $ref: "#/components/responses/Error"
      security:
        - genesiscloud: []

  /compute/v1/security-groups:
    get:
      tags:
        - Security Groups
      operationId: ListSecurityGroups
      summary: List security groups
      parameters:
        - $ref: "#/components/parameters/PageQueryParameter"
        - $ref: "#/components/parameters/PerPageQueryParameter"
      responses:
        "200":
          description: "success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/compute.v1.ListSecurityGroupsResponse"
        default:
          $ref: "#/components/responses/Error"
      security:
        - genesiscloud: []
    post:
      tags:
        - Security Groups
      operationId: CreateSecurityGroup
      summary: Create security group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: |
                    The human-readable name set for the security group. **Please Note**: `default` and `standard` are not allowed names (reserved words).
                description:
                  type: string
                  description: he human-readable description set for the security group.
                region:
                  description: The identifier for the region in which this security group should be created in
                  $ref: "#/components/schemas/compute.v1.Region"
                rules:
                  type: array
                  description: The list of rules of the security group.
                  minItems: 1
                  items:
                    $ref: "#/components/schemas/compute.v1.SecurityGroup.Rule"
              required:
                - name
                - rules
      responses:
        "201":
          description: "success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/compute.v1.CreateSecurityGroupResponse"
        default:
          $ref: "#/components/responses/Error"
      security:
        - genesiscloud: []

  /compute/v1/security-groups/{security_group_id}:
    parameters:
      - in: path
        name: security_group_id
        required: true
        schema:
          type: string
          description: Security group id
    get:
      tags:
        - Security Groups
      operationId: GetSecurityGroup
      summary: Get security group
      description: Get details of a security group with the given ID
      responses:
        "200":
          description: "success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/compute.v1.GetSecurityGroupResponse"
        default:
          $ref: "#/components/responses/Error"
      security:
        - genesiscloud: []
    put:
      tags:
        - Security Groups
      operationId: UpdateSecurityGroup
      summary: Update security group
      description: Update the details of a security group with the given ID
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The human-readable name set for the security group.
                description:
                  type: string
                  description: he human-readable description set for the security group.
                rules:
                  type: array
                  description: The list of rules of the security group.
                  minItems: 1
                  items:
                    $ref: "#/components/schemas/compute.v1.SecurityGroup.Rule"
              required:
                - name
                - rules
      responses:
        "200":
          description: "success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/compute.v1.UpdateSecurityGroupResponse"
        default:
          $ref: "#/components/responses/Error"
      security:
        - genesiscloud: []
    delete:
      tags:
        - Security Groups
      operationId: DeleteSecurityGroup
      summary: Delete security group
      description: Delete a security group with the given ID
      responses:
        "204":
          description: "success"
        default:
          $ref: "#/components/responses/Error"
      security:
        - genesiscloud: []

  /compute/v1/instances:
    get:
      tags:
        - Instances
      operationId: ListInstances
      summary: List instances
      parameters:
        - $ref: "#/components/parameters/PageQueryParameter"
        - $ref: "#/components/parameters/PerPageQueryParameter"
      responses:
        "200":
          description: "success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/compute.v1.ListInstancesResponse"
        default:
          $ref: "#/components/responses/Error"
      security:
        - genesiscloud: []
    post:
      tags:
        - Instances
      operationId: CreateInstance
      summary: Create instance
      parameters: []
      responses:
        "201":
          description: "success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/compute.v1.CreateInstanceResponse"
        default:
          $ref: "#/components/responses/Error"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  $ref: "#/components/schemas/compute.v1.Instance.Name"
                hostname:
                  $ref: "#/components/schemas/compute.v1.Instance.Hostname"
                type:
                  $ref: "#/components/schemas/compute.v1.Instance.Type"
                image:
                  $ref: "#/components/schemas/compute.v1.ImageId"
                ssh_keys:
                  type: array
                  description: |
                    An array of ssh key ids. 
                    This should not be provided if `password` authentication method is desired.
                  minItems: 1
                  items:
                    $ref: "#/components/schemas/compute.v1.Instance.SSHKeyId"
                volumes:
                  type: array
                  description: |
                    An array of volume ids.
                  items:
                    $ref: "#/components/schemas/compute.v1.VolumeId"
                password:
                  type: string
                  description: |
                    The password to access the instance. 
                    Your password must have upper and lower chars, digits and length between 8-72. 
                    **Please Note**: Only one of `ssh_keys` or `password` can be provided. 
                    Password is less secure - we recommend you use an SSH key-pair.
                placement_option:
                  $ref: "#/components/schemas/compute.v1.PlacementOption"
                  description: |
                    The placement option identifier in which instances are physically located relative to each other within a zone.
                  default: AUTO
                security_groups:
                  $ref: "#/components/schemas/compute.v1.Instance.SecurityGroupIds"
                is_protected:
                  $ref: "#/components/schemas/compute.v1.Instance.IsProtected"
                public_ip_type:
                  $ref: "#/components/schemas/compute.v1.Instance.PublicIPType"
                region:
                  $ref: "#/components/schemas/compute.v1.Region"
                  description: |
                    The region identifier in which this instance should be created in.
                  default: ARC-IS-HAF-1
                metadata:
                  type: object
                  description: Option to provide metadata. Currently supported is `startup_script`.
                  minProperties: 1
                  properties:
                    startup_script:
                      type: string
                      description: |
                        A plain text bash script or "cloud-config" file that will be executed after the first instance boot. 
                        It is limited to 64 KiB in size. You can use it to configure your instance, e.g. installing the **NVIDIA GPU driver**. 
                        Learn more about [startup scripts and installing the GPU driver](https://support.com/support/solutions/articles/47001122478).
              required:
                - name
                - hostname
                - type
                - image
      security:
        - genesiscloud: []

  /compute/v1/instances/{instance_id}:
    parameters:
      - in: path
        name: instance_id
        required: true
        schema:
          type: string
          description: Instance id
    get:
      tags:
        - Instances
      operationId: GetInstance
      summary: Get instance
      description: Get details of an instance with the given ID.
      responses:
        "200":
          description: "success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/compute.v1.GetInstanceResponse"
        default:
          $ref: "#/components/responses/Error"
      security:
        - genesiscloud: []
    delete:
      tags:
        - Instances
      operationId: DeleteInstance
      summary: Delete instance
      description: Delete an instance with the given ID.
      responses:
        "204":
          description: "success"
        default:
          $ref: "#/components/responses/Error"
      security:
        - genesiscloud: []
    patch:
      tags:
        - Instances
      operationId: UpdateInstance
      summary: Update instance (attach/detach volumes, security groups, instance name)
      description: Update instance with the given ID (attach/detach volumes, security groups, name).
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  $ref: "#/components/schemas/compute.v1.Instance.Name"
                is_protected:
                  $ref: "#/components/schemas/compute.v1.Instance.IsProtected"
                security_groups:
                  $ref: "#/components/schemas/compute.v1.Instance.SecurityGroupIds"
                volumes:
                  type: array
                  description: The instance's volumes IDs.
                  items:
                    $ref: "#/components/schemas/compute.v1.VolumeId"
      responses:
        "200":
          description: "success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/compute.v1.UpdateInstanceResponse"
        default:
          $ref: "#/components/responses/Error"
      security:
        - genesiscloud: []

  /compute/v1/instances/{instance_id}/actions:
    parameters:
      - in: path
        name: instance_id
        required: true
        schema:
          type: string
          description: Instance id
    get:
      tags:
        - Instances
      operationId: ListInstanceActions
      summary: List Instance actions
      description: Liste all actions that can currently be performed on a instance.
      responses:
        "200":
          description: "success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/compute.v1.Instance.ListActionsResponse"
        default:
          $ref: "#/components/responses/Error"
      security:
        - genesiscloud: []
    post:
      tags:
        - Instances
      operationId: InstanceAction
      summary: Perform action
      description: The action to perform on the instance.
      responses:
        "204":
          description: "success"
        default:
          $ref: "#/components/responses/Error"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                action:
                  $ref: "#/components/schemas/compute.v1.Instance.Action"
              x-properties-order:
                - action
      security:
        - genesiscloud: []

  /compute/v1/instances/{instance_id}/snapshots:
    parameters:
      - in: path
        name: instance_id
        required: true
        schema:
          type: string
          description: Instance id
    get:
      tags:
        - Instances
      operationId: ListInstanceSnapshots
      summary: List instance snapshots
      parameters:
        - $ref: "#/components/parameters/PageQueryParameter"
        - $ref: "#/components/parameters/PerPageQueryParameter"
      responses:
        "200":
          description: "success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/compute.v1.ListSnapshotsResponse"
        default:
          $ref: "#/components/responses/Error"
      security:
        - genesiscloud: []
    post:
      tags:
        - Instances
      operationId: CreateSnapshot
      summary: Create snapshot
      description: Takes a snapshot of the instance
      responses:
        "201":
          description: "success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/compute.v1.Instance.CreateSnapshotResponse"
        default:
          $ref: "#/components/responses/Error"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Name of the snapshot
              required:
                - name
      security:
        - genesiscloud: []

  /compute/v1/ssh-keys:
    get:
      tags:
        - SSH Keys
      operationId: ListSSHKeys
      summary: List SSH keys
      parameters:
        - $ref: "#/components/parameters/PageQueryParameter"
        - $ref: "#/components/parameters/PerPageQueryParameter"
      responses:
        "200":
          description: "success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/compute.v1.ListSSHKeysResponse"
        default:
          $ref: "#/components/responses/Error"
      security:
        - genesiscloud: []
    post:
      tags:
        - SSH Keys
      operationId: createSSHKey
      summary: Create SSH key
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: |
                    The human-readable name for your ssh key.
                value:
                  type: string
                  description: SSH public key
              required:
                - name
                - value
      responses:
        "201":
          description: "success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/compute.v1.SSHKey"
        default:
          $ref: "#/components/responses/Error"
      security:
        - genesiscloud: []

  /compute/v1/ssh-keys/{ssh_key_id}:
    parameters:
      - in: path
        name: ssh_key_id
        required: true
        schema:
          type: string
          description: SSH Key id
    get:
      tags:
        - SSH Keys
      operationId: GetSSHKey
      summary: Get SSH key
      description: Get details of a ssh key with the given ID
      responses:
        "200":
          description: "success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/compute.v1.SSHKey"
        default:
          $ref: "#/components/responses/Error"
      security:
        - genesiscloud: []
    put:
      tags:
        - SSH Keys
      operationId: UpdateSSHKey
      summary: Update SSH key
      description: Edit the name of an existing SSH key.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: |
                    The new human-readable name for your ssh key.
              required:
                - name
      responses:
        "200":
          description: "success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/compute.v1.SSHKey"
        default:
          $ref: "#/components/responses/Error"
      security:
        - genesiscloud: []
    delete:
      tags:
        - SSH Keys
      operationId: DeleteSSHKey
      summary: Delete SSH key
      description: Delete a ssh key with the given ID
      responses:
        "204":
          description: "success"
        default:
          $ref: "#/components/responses/Error"
      security:
        - genesiscloud: []

  /compute/v1/availability/{region}/instances:
    parameters:
      - in: path
        name: region
        required: true
        schema:
          $ref: "#/components/schemas/compute.v1.Region"
    get:
      tags:
        - Availability
      operationId: InstanceAvailability
      summary: Get cluster availability for region
      responses:
        "200":
          description: "success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/compute.v1.AvailabilityResponse"

components:
  schemas:
    Timestamp:
      type: string
      format: date-time

    compute.v1.Error:
      type: object
      properties:
        code:
          type: string
          example: 02001
          description: |
            The Genesis Cloud error code. 
            Check the [developer documentation](https://developers.com/#error-codes) for more information on error codes.
        message:
          type: string
          example: Invalid route
          description: An explanation of what went wrong.
      required:
        - code
        - message

    compute.v1.Image:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/compute.v1.ImageId"
        name:
          type: string
          description: The display name that has been given to an image. This is what is shown in the control panel and is generally a descriptive title for the image in question.
        type:
          $ref: "#/components/schemas/compute.v1.Image.Type"
        regions:
          description: The list of regions in which this image can be used in.
          type: array
          items:
            $ref: "#/components/schemas/compute.v1.Region"
        created_at:
          $ref: "#/components/schemas/Timestamp"
      required:
        - id
        - name
        - type
        - regions
        - created_at

    compute.v1.Image.Type:
      type: string
      description: Describes the kind of image.
      enum:
        - base-os
        - preconfigured
        - snapshot

    compute.v1.Snapshot:
      type: object
      properties:
        id:
          type: string
          description: |
            A unique identifier for each snapshot. This is automatically generated.
        name:
          type: string
          description: |
            The human-readable name for the snapshot.
        size:
          type: string
          format: int64
          description: |
            The storage size of this snapshot given in bytes.
        resource_id:
          type: string
          description: |
            The id of the resource (e.g. instance) that was snapshotted.
        region:
          $ref: "#/components/schemas/compute.v1.Region"
        status:
          $ref: "#/components/schemas/compute.v1.Snapshot.Status"
        created_at:
          $ref: "#/components/schemas/Timestamp"
      required:
        - id
        - name
        - resource_id
        - region
        - status
        - created_at

    compute.v1.Snapshot.Status:
      type: string
      description: The snapshot status.
      enum:
        - available
        - snapshotting
        - error

    compute.v1.VolumeId:
      type: string
      description: |
        A unique identifier for each volume. This is automatically generated.

    compute.v1.Volume:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/compute.v1.VolumeId"
        name:
          type: string
          description: The human-readable name for the volume.
        description:
          type: string
          description: The human-readable description for the volume.
        size:
          type: integer
          description: The storage size of this volume given in GiB.
        region:
          $ref: "#/components/schemas/compute.v1.Region"
        instances:
          type: array
          description: The attached instances.
          items:
            type: object
            properties:
              id:
                type: string
                description: The id of the attached instance.
              name:
                type: string
                description: The name of the attached instance.
        status:
          description: The volume status.
          $ref: "#/components/schemas/compute.v1.Volume.Status"
        created_at:
          $ref: "#/components/schemas/Timestamp"
      required:
        - id
        - name
        - description
        - size
        - region
        - instances
        - status
        - created_at

    compute.v1.Volume.Status:
      type: string
      enum:
        - creating
        - active
        - error

    compute.v1.SecurityGroup:
      type: object
      properties:
        id:
          type: string
          description: |
            A unique identifier for each security group. This is automatically generated.
        name:
          type: string
          description: |
            The human-readable name for the security group.
        description:
          type: string
          description: |
            The human-readable description for the security group.
        region:
          $ref: "#/components/schemas/compute.v1.Region"
          description: The identifier for the region this security group exists in
        status:
          $ref: "#/components/schemas/compute.v1.SecurityGroup.Status"
        rules:
          type: array
          items:
            $ref: "#/components/schemas/compute.v1.SecurityGroup.Rule"
        created_at:
          $ref: "#/components/schemas/Timestamp"
      required:
        - id
        - name
        - description
        - region
        - status
        - rules
        - created_at

    compute.v1.SecurityGroup.Status:
      type: string
      description: The security group status.
      enum:
        - enqueued
        - creating
        - updating
        - deleting
        - created
        - error

    compute.v1.SecurityGroup.Rule:
      type: object
      properties:
        protocol:
          $ref: "#/components/schemas/compute.v1.SecurityGroup.Rule.Protocol"
        direction:
          $ref: "#/components/schemas/compute.v1.SecurityGroup.Rule.Direction"
        port_range_min:
          description: The minimum port number of the rule.
          type: integer
        port_range_max:
          description: The maximum port number of the rule.
          type: integer
      required:
        - protocol
        - direction

    compute.v1.SecurityGroup.Rule.Direction:
      description: The direction of the rule.
      type: string
      enum:
        - ingress
        - egress

    compute.v1.SecurityGroup.Rule.Protocol:
      description: The protocol of the rule.
      type: string
      enum:
        - tcp
        - udp
        - icmp
        - all

    compute.v1.Instance:
      type: object
      properties:
        id:
          type: string
          description: The unique ID of the instance.
        name:
          $ref: "#/components/schemas/compute.v1.Instance.Name"
        hostname:
          $ref: "#/components/schemas/compute.v1.Instance.Hostname"
        type:
          $ref: "#/components/schemas/compute.v1.Instance.Type"
        public_ip:
          type: string
          description: The public IPv4 IP-Address (IPv4 address).
          example: 1.2.3.4
        public_ip_type:
          $ref: "#/components/schemas/compute.v1.Instance.PublicIPType"
        private_ip:
          type: string
          description: The private IPv4 IP-Address (IPv4 address).
          example: 1.2.3.4
        status:
          $ref: "#/components/schemas/compute.v1.Instance.Status"
        ssh_keys:
          type: array
          description: The ssh keys of the instance.
          items:
            type: object
            description: The ssh key.
            properties:
              id:
                $ref: "#/components/schemas/compute.v1.Instance.SSHKeyId"
              name:
                type: string
                description: The name of the ssh key.
        image:
          type: object
          description: The image of the instance.
          properties:
            id:
              $ref: "#/components/schemas/compute.v1.ImageId"
            name:
              type: string
              description: The image name.
        security_groups:
          type: array
          description: The security groups of the instance.
          items:
            type: object
            properties:
              id:
                $ref: "#/components/schemas/compute.v1.Instance.SecurityGroupId"
              name:
                type: string
                description: The name of the security group.
        volumes:
          type: array
          description: The volumes of the instance
          items:
            type: object
            properties:
              id:
                $ref: "#/components/schemas/compute.v1.VolumeId"
              name:
                type: string
                description: The volume name.
        region:
          $ref: "#/components/schemas/compute.v1.Region"
        placement_option:
          $ref: "#/components/schemas/compute.v1.PlacementOption"
        created_at:
          $ref: "#/components/schemas/Timestamp"
        updated_at:
          $ref: "#/components/schemas/Timestamp"
      required:
        - id
        - name
        - hostname
        - type
        - public_ip
        - public_ip_type
        - private_ip
        - status
        - ssh_keys
        - image
        - security_groups
        - volumes
        - region
        - placement_option
        - created_at
        - updated_at

    compute.v1.Instance.Name:
      type: string
      description: The human-readable name set for the instance.

    compute.v1.Instance.Hostname:
      type: string
      description: The hostname of your instance.

    compute.v1.ImageId:
      type: string
      description: A unique number that can be used to identify and reference a specific image.

    compute.v1.Instance.SSHKeyId:
      type: string
      description: The ssh key ID.

    compute.v1.Instance.SecurityGroupIds:
      type: array
      description: |
        An array of security group ids. 
        **Please Note**: By default the **standard security group** is set if you don"t specify any Security Groups. 
        You can override this behavior by providing a different Security Group.
      minItems: 1
      items:
        $ref: "#/components/schemas/compute.v1.Instance.SecurityGroupId"

    compute.v1.Instance.SecurityGroupId:
      type: string
      description: The security group ID.

    compute.v1.Instance.IsProtected:
      type: boolean
      default: false
      description: |
        Specifies if the instance is termination protected. 
        When set to `true`, it"s not possible to destroy the instance until it"s switched to `false`. 
        Set to `true` automatically for long-term billed instances.

    compute.v1.Instance.Action:
      type: string
      enum: ["start", "stop"]

    compute.v1.Instance.Status:
      type: string
      description: The instance status
      enum:
        - enqueued
        - creating
        - active
        - shutoff
        - starting
        - restarting
        - stopping
        - deleting
        - error
      default: active

    compute.v1.Instance.PublicIPType:
      type: string
      description: |
        When set to `static`, the instance's public IP will not change between start and stop actions.
      enum:
        - dynamic
        - static
      default: dynamic

    compute.v1.Instance.Type:
      type: string
      description: The instance type identifier.
      enum:
        - vcpu-4_memory-24g_disk-80g_nvidia3090-1
        - vcpu-8_memory-48g_disk-80g_nvidia3090-2
        - vcpu-12_memory-72g_disk-80g_nvidia3090-3
        - vcpu-16_memory-96g_disk-80g_nvidia3090-4
        - vcpu-20_memory-120g_disk-80g_nvidia3090-5
        - vcpu-24_memory-144g_disk-80g_nvidia3090-6
        - vcpu-28_memory-168g_disk-80g_nvidia3090-7
        - vcpu-32_memory-192g_disk-80g_nvidia3090-8

        - vcpu-8_memory-48g_disk-80g_nvidia3090-1
        - vcpu-16_memory-96g_disk-80g_nvidia3090-2
        - vcpu-24_memory-144g_disk-80g_nvidia3090-3
        - vcpu-32_memory-192g_disk-80g_nvidia3090-4

        - vcpu-4_memory-12g_disk-80g_nvidia3080-1
        - vcpu-8_memory-24g_disk-80g_nvidia3080-2
        - vcpu-12_memory-36g_disk-80g_nvidia3080-3
        - vcpu-16_memory-48g_disk-80g_nvidia3080-4
        - vcpu-20_memory-60g_disk-80g_nvidia3080-5
        - vcpu-24_memory-72g_disk-80g_nvidia3080-6
        - vcpu-28_memory-84g_disk-80g_nvidia3080-7
        - vcpu-32_memory-96g_disk-80g_nvidia3080-8

        - vcpu-8_memory-32g_disk-80g_nvidia3080-1
        - vcpu-16_memory-64g_disk-80g_nvidia3080-2
        - vcpu-24_memory-96g_disk-80g_nvidia3080-3
        - vcpu-32_memory-128g_disk-80g_nvidia3080-4

        - vcpu-4_memory-12g_disk-80g_nvidia3060ti-1
        - vcpu-8_memory-24g_disk-80g_nvidia3060ti-2
        - vcpu-12_memory-36g_disk-80g_nvidia3060ti-3
        - vcpu-16_memory-48g_disk-80g_nvidia3060ti-4
        - vcpu-20_memory-60g_disk-80g_nvidia3060ti-5
        - vcpu-24_memory-72g_disk-80g_nvidia3060ti-6
        - vcpu-28_memory-84g_disk-80g_nvidia3060ti-7
        - vcpu-32_memory-96g_disk-80g_nvidia3060ti-8

        - vcpu-4_memory-12g_disk-80g_nvidia1080ti-1
        - vcpu-8_memory-24g_disk-80g_nvidia1080ti-2
        - vcpu-12_memory-36g_disk-80g_nvidia1080ti-3
        - vcpu-16_memory-48g_disk-80g_nvidia1080ti-4
        - vcpu-20_memory-60g_disk-80g_nvidia1080ti-5
        - vcpu-24_memory-72g_disk-80g_nvidia1080ti-6
        - vcpu-28_memory-84g_disk-80g_nvidia1080ti-7
        - vcpu-32_memory-96g_disk-80g_nvidia1080ti-8

        - vcpu-2_memory-8g_disk-80g_amdrx470-4
        - vcpu-2_memory-8g_disk-80g_amdrx470-5
        - vcpu-2_memory-8g_disk-80g_amdrx470-6
        - vcpu-2_memory-8g_disk-80g_amdrx470-7
        - vcpu-2_memory-8g_disk-80g_amdrx470-8

        - vcpu-2_memory-4g_disk-80g
        - vcpu-4_memory-8g_disk-80g
        - vcpu-8_memory-16g_disk-80g
        - vcpu-12_memory-24g_disk-80g
        - vcpu-16_memory-32g_disk-80g
        - vcpu-20_memory-40g_disk-80g
        - vcpu-24_memory-48g_disk-80g

    compute.v1.SSHKey:
      type: object
      properties:
        id:
          type: string
          description: |
            A unique identifier for each SSH key. This is automatically generated.
        name:
          type: string
          description: |
            The human-readable name for the SSH key.
        value:
          type: string
          description: |
            SSH public key.
        fingerprint:
          type: string
          description: |
            The fingerprint of the SSH key.
        type:
          type: string
          description: |
            The encryption algorithm type of the SSH key.
        size:
          type: integer
          description: |
            The length of the SSH key.
        created_at:
          $ref: "#/components/schemas/Timestamp"
      required:
        - id
        - name
        - value
        - fingerprint
        - type
        - size
        - created_at

    compute.v1.Region:
      type: string
      description: The region identifier.
      enum:
        - ARC-IS-HAF-1
        - NORD-NO-KRS-1

    compute.v1.PlacementOption:
      type: string
      description: The placement option identifier.
      enum:
        - AUTO
        - A
        - B

    # responses:
    compute.v1.Instance.ListActionsResponse:
      description: response
      type: object
      properties:
        actions:
          type: array
          items:
            $ref: "#/components/schemas/compute.v1.Instance.Action"
      required:
        - actions

    compute.v1.Instance.CreateSnapshotResponse:
      description: response
      type: object
      properties:
        snapshot:
          $ref: "#/components/schemas/compute.v1.Snapshot"
      required:
        - snapshot

    compute.v1.ListImagesResponse:
      description: response
      type: object
      properties:
        images:
          type: array
          items:
            $ref: "#/components/schemas/compute.v1.Image"
        total_count:
          type: integer
        page:
          type: integer
        per_page:
          type: integer
      required:
        - images
        - total_count
        - page
        - per_page

    compute.v1.ListSnapshotsResponse:
      description: response
      type: object
      properties:
        snapshots:
          type: array
          items:
            $ref: "#/components/schemas/compute.v1.Snapshot"
        total_count:
          type: integer
        page:
          type: integer
        per_page:
          type: integer
      required:
        - snapshots
        - total_count
        - page
        - per_page

    compute.v1.GetSnapshotResponse:
      description: response
      type: object
      properties:
        snapshot:
          $ref: "#/components/schemas/compute.v1.Snapshot"
      required:
        - snapshot

    compute.v1.UpdateSnapshotResponse:
      description: response
      type: object
      properties:
        snapshot:
          $ref: "#/components/schemas/compute.v1.Snapshot"
      required:
        - snapshot

    compute.v1.ListVolumesResponse:
      description: response
      type: object
      properties:
        volumes:
          type: array
          items:
            $ref: "#/components/schemas/compute.v1.Volume"
        total_count:
          type: integer
        page:
          type: integer
        per_page:
          type: integer
      required:
        - volumes
        - total_count
        - page
        - per_page

    compute.v1.GetVolumeResponse:
      description: response
      type: object
      properties:
        volume:
          $ref: "#/components/schemas/compute.v1.Volume"
      required:
        - volume

    compute.v1.UpdateVolumeResponse:
      description: response
      type: object
      properties:
        volume:
          $ref: "#/components/schemas/compute.v1.Volume"
      required:
        - volume

    compute.v1.CreateSecurityGroupResponse:
      description: response
      type: object
      properties:
        security_group:
          $ref: "#/components/schemas/compute.v1.SecurityGroup"
      required:
        - security_group

    compute.v1.ListSecurityGroupsResponse:
      description: response
      type: object
      properties:
        security_groups:
          type: array
          items:
            $ref: "#/components/schemas/compute.v1.SecurityGroup"
        total_count:
          type: integer
        page:
          type: integer
        per_page:
          type: integer
      required:
        - security_groups
        - total_count
        - page
        - per_page

    compute.v1.GetSecurityGroupResponse:
      description: response
      type: object
      properties:
        security_group:
          $ref: "#/components/schemas/compute.v1.SecurityGroup"
      required:
        - security_group

    compute.v1.UpdateSecurityGroupResponse:
      description: response
      type: object
      properties:
        security_group:
          $ref: "#/components/schemas/compute.v1.SecurityGroup"
      required:
        - security_group

    compute.v1.CreateInstanceResponse:
      description: response
      type: object
      properties:
        instance:
          $ref: "#/components/schemas/compute.v1.Instance"
      required:
        - instance

    compute.v1.ListInstancesResponse:
      description: response
      type: object
      properties:
        instances:
          type: array
          items:
            $ref: "#/components/schemas/compute.v1.Instance"
        total_count:
          type: integer
        page:
          type: integer
        per_page:
          type: integer
      required:
        - instances
        - total_count
        - page
        - per_page

    compute.v1.GetInstanceResponse:
      description: response
      type: object
      properties:
        instance:
          $ref: "#/components/schemas/compute.v1.Instance"
      required:
        - instance

    compute.v1.UpdateInstanceResponse:
      description: response
      type: object
      properties:
        instance:
          $ref: "#/components/schemas/compute.v1.Instance"
      required:
        - instance

    compute.v1.ListSSHKeysResponse:
      description: response
      type: object
      properties:
        ssh_keys:
          type: array
          items:
            $ref: "#/components/schemas/compute.v1.SSHKey"
        total_count:
          type: integer
        page:
          type: integer
        per_page:
          type: integer
      required:
        - ssh_keys
        - total_count
        - page
        - per_page

    compute.v1.AvailabilityResponse:
      description: response
      type: object
      properties:
        availability:
          type: object
          properties:
            type:
              type: string
              example: instances
            region:
              $ref: "#/components/schemas/compute.v1.Region"
            placement:
              type: string
              example: NONE
            instance_types:
              type: array
              items:
                type: object
                properties:
                  type:
                    $ref: "#/components/schemas/compute.v1.Instance.Type"
                  available:
                    type: boolean
          required:
            - type
            - region
            - placement
            - instance_types
      required:
        - availability

  parameters:
    PerPageQueryParameter:
      name: per_page
      in: query
      schema:
        type: integer
        description:
          A positive integer lower or equal to 100 to select the number
          of items to return.
        nullable: true
        minimum: 1
        default: 50

    PageQueryParameter:
      name: page
      in: query
      schema:
        type: integer
        description: A positive integer to choose the page to return.
        nullable: true
        minimum: 1
        default: 1

  responses:
    Error:
      description: Unexpected error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/compute.v1.Error"

  securitySchemes:
    genesiscloud:
      in: header
      name: X-Auth-Token
      type: apiKey
